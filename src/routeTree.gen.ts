/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrackingItemIdImport } from './routes/tracking/$itemId'
import { Route as InvoicesInvoiceIdImport } from './routes/invoices/$invoiceId'

// Create/Update Routes

const TrackingItemIdRoute = TrackingItemIdImport.update({
  id: '/tracking/$itemId',
  path: '/tracking/$itemId',
  getParentRoute: () => rootRoute,
} as any)

const InvoicesInvoiceIdRoute = InvoicesInvoiceIdImport.update({
  id: '/invoices/$invoiceId',
  path: '/invoices/$invoiceId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/invoices/$invoiceId': {
      id: '/invoices/$invoiceId'
      path: '/invoices/$invoiceId'
      fullPath: '/invoices/$invoiceId'
      preLoaderRoute: typeof InvoicesInvoiceIdImport
      parentRoute: typeof rootRoute
    }
    '/tracking/$itemId': {
      id: '/tracking/$itemId'
      path: '/tracking/$itemId'
      fullPath: '/tracking/$itemId'
      preLoaderRoute: typeof TrackingItemIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/invoices/$invoiceId': typeof InvoicesInvoiceIdRoute
  '/tracking/$itemId': typeof TrackingItemIdRoute
}

export interface FileRoutesByTo {
  '/invoices/$invoiceId': typeof InvoicesInvoiceIdRoute
  '/tracking/$itemId': typeof TrackingItemIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/invoices/$invoiceId': typeof InvoicesInvoiceIdRoute
  '/tracking/$itemId': typeof TrackingItemIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/invoices/$invoiceId' | '/tracking/$itemId'
  fileRoutesByTo: FileRoutesByTo
  to: '/invoices/$invoiceId' | '/tracking/$itemId'
  id: '__root__' | '/invoices/$invoiceId' | '/tracking/$itemId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  InvoicesInvoiceIdRoute: typeof InvoicesInvoiceIdRoute
  TrackingItemIdRoute: typeof TrackingItemIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  InvoicesInvoiceIdRoute: InvoicesInvoiceIdRoute,
  TrackingItemIdRoute: TrackingItemIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/invoices/$invoiceId",
        "/tracking/$itemId"
      ]
    },
    "/invoices/$invoiceId": {
      "filePath": "invoices/$invoiceId.tsx"
    },
    "/tracking/$itemId": {
      "filePath": "tracking/$itemId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
